<?php

/**
 * @file
 * Functions to support theming in the nnphi theme.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_preprocess_block().
 *
 */
function nnphi_preprocess_block(&$variables) {
  if (!isset($variables['plugin_id'])) {
    return;
  }
  // Add an outer class for the block ID.
  $variables['attributes']['class'][] = Html::cleanCssIdentifier('block-' . $variables['plugin_id']);
}

/**
 * Implements hook_preprocess_page().
 */
function nnphi_preprocess_page(&$variables) {

  $show_hero = TRUE;
  /** @var \Drupal\node\NodeInterface $node */
  $node = \Drupal::routeMatch()->getParameter('node');
  $homepage = \Drupal::service('path.matcher')->isFrontPage();

  // Revision IDs are strings and node ids are strings when a revision is loaded.
  // Node parameters loaded by getParameter are objects and the bundle can be accessed normally.
  if ($node) {

    $revision = \Drupal::routeMatch()->getRawParameter('node_revision');
    
    if ($revision) {
      $revised_node = \Drupal::entityTypeManager()
        ->getStorage('node')
        ->loadRevision($revision);

      $content_type = $revised_node->bundle();
    }
    else {
      $content_type = $node->bundle();
    }

    if ($content_type === 'training') {
      $show_hero = FALSE;
    }
    if ($content_type === 'component_page') {
      if ($node->hasField('field_component_page_show_header') && (int)$node->get('field_component_page_show_header')->getString() !== 1) {
        $show_hero = FALSE;
      }
    }
  }

  if ($homepage) {
    $show_hero = FALSE;
  }

  $variables['show_hero'] = $show_hero;

}

/**
 * Implements hook_theme_suggestions_input_alter().
 */
function nnphi_theme_suggestions_input_alter(&$suggestions, array $variables) {
  if (empty($variables['element']['#type']) || $variables['element']['#type'] !== 'checkbox') {
    return;
  }
  if (empty($variables['element']['#type']) || $variables['element']['#type'] !== 'radio' || $variables['element']['#type'] !== 'radios') {
    return;
  }
  $suggestions[] = ['misc/input__checkbox', 'misc/input__radio'];
}

/**
 * Implements hook_theme_suggestions_form_element_alter().
 */
function nnphi_theme_suggestions_form_element_alter(array &$suggestions, array $variables, $hook) {
  $fields = [
    'field_training_review_overall',
  ];
  if (isset($variables['element']['#name']) && in_array($variables['element']['#name'], $fields)) {
      $suggestions[] = $hook . '__comment_training_review_radio';
  }
}
